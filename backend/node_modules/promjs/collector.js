"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Collector = void 0;

var _utils = require("./utils");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Collector =
/*#__PURE__*/
function () {
  function Collector() {
    _classCallCheck(this, Collector);

    _defineProperty(this, "data", void 0);

    this.data = [];
  }

  _createClass(Collector, [{
    key: "get",
    value: function get(labels) {
      return (0, _utils.findExistingMetric)(labels, this.data);
    }
  }, {
    key: "set",
    value: function set(value, labels) {
      var existing = (0, _utils.findExistingMetric)(labels, this.data);

      if (existing) {
        existing.value = value;
      } else {
        this.data.push({
          labels: labels,
          value: value
        });
      }

      return this;
    }
  }, {
    key: "collect",
    value: function collect(labels) {
      if (!labels) {
        return this.data;
      }

      return this.data.filter(function (item) {
        if (!item.labels) {
          return false;
        }

        var entries = Object.entries(labels);

        for (var i = 0; i < entries.length; i += 1) {
          var _entries$i = _slicedToArray(entries[i], 2),
              label = _entries$i[0],
              value = _entries$i[1];

          if (item.labels[label] !== value) {
            return false;
          }
        }

        return true;
      });
    }
  }, {
    key: "resetAll",
    value: function resetAll() {
      for (var i = 0; i < this.data.length; i += 1) {
        this.reset(this.data[i].labels);
      }

      return this;
    }
  }]);

  return Collector;
}();

exports.Collector = Collector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb2xsZWN0b3IudHMiXSwibmFtZXMiOlsiQ29sbGVjdG9yIiwiZGF0YSIsImxhYmVscyIsInZhbHVlIiwiZXhpc3RpbmciLCJwdXNoIiwiZmlsdGVyIiwiaXRlbSIsImVudHJpZXMiLCJPYmplY3QiLCJpIiwibGVuZ3RoIiwibGFiZWwiLCJyZXNldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFc0JBLFM7OztBQUdwQix1QkFBYztBQUFBOztBQUFBOztBQUNaLFNBQUtDLElBQUwsR0FBWSxFQUFaO0FBQ0Q7Ozs7d0JBRUdDLE0sRUFBd0M7QUFDMUMsYUFBTywrQkFBc0JBLE1BQXRCLEVBQThCLEtBQUtELElBQW5DLENBQVA7QUFDRDs7O3dCQUVHRSxLLEVBQVVELE0sRUFBdUI7QUFDbkMsVUFBTUUsUUFBUSxHQUFHLCtCQUFtQkYsTUFBbkIsRUFBMkIsS0FBS0QsSUFBaEMsQ0FBakI7O0FBQ0EsVUFBSUcsUUFBSixFQUFjO0FBQ1pBLFFBQUFBLFFBQVEsQ0FBQ0QsS0FBVCxHQUFpQkEsS0FBakI7QUFDRCxPQUZELE1BRU87QUFDTCxhQUFLRixJQUFMLENBQVVJLElBQVYsQ0FBZTtBQUNiSCxVQUFBQSxNQUFNLEVBQU5BLE1BRGE7QUFFYkMsVUFBQUEsS0FBSyxFQUFMQTtBQUZhLFNBQWY7QUFJRDs7QUFFRCxhQUFPLElBQVA7QUFDRDs7OzRCQUVPRCxNLEVBQThCO0FBQ3BDLFVBQUksQ0FBQ0EsTUFBTCxFQUFhO0FBQ1gsZUFBTyxLQUFLRCxJQUFaO0FBQ0Q7O0FBQ0QsYUFBTyxLQUFLQSxJQUFMLENBQVVLLE1BQVYsQ0FBaUIsVUFBQ0MsSUFBRCxFQUFVO0FBQ2hDLFlBQUksQ0FBQ0EsSUFBSSxDQUFDTCxNQUFWLEVBQWtCO0FBQ2hCLGlCQUFPLEtBQVA7QUFDRDs7QUFDRCxZQUFNTSxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0QsT0FBUCxDQUFlTixNQUFmLENBQWhCOztBQUNBLGFBQUssSUFBSVEsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsT0FBTyxDQUFDRyxNQUE1QixFQUFvQ0QsQ0FBQyxJQUFJLENBQXpDLEVBQTRDO0FBQUEsMENBQ25CRixPQUFPLENBQUNFLENBQUQsQ0FEWTtBQUFBLGNBQ25DRSxLQURtQztBQUFBLGNBQzVCVCxLQUQ0Qjs7QUFFMUMsY0FBSUksSUFBSSxDQUFDTCxNQUFMLENBQVlVLEtBQVosTUFBdUJULEtBQTNCLEVBQWtDO0FBQ2hDLG1CQUFPLEtBQVA7QUFDRDtBQUNGOztBQUNELGVBQU8sSUFBUDtBQUNELE9BWk0sQ0FBUDtBQWFEOzs7K0JBRWdCO0FBQ2YsV0FBSyxJQUFJTyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLEtBQUtULElBQUwsQ0FBVVUsTUFBOUIsRUFBc0NELENBQUMsSUFBSSxDQUEzQyxFQUE4QztBQUM1QyxhQUFLRyxLQUFMLENBQVcsS0FBS1osSUFBTCxDQUFVUyxDQUFWLEVBQWFSLE1BQXhCO0FBQ0Q7O0FBRUQsYUFBTyxJQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMYWJlbHMsIE1ldHJpYywgTWV0cmljVmFsdWUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IGZpbmRFeGlzdGluZ01ldHJpYyB9IGZyb20gJy4vdXRpbHMnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29sbGVjdG9yPFQgZXh0ZW5kcyBNZXRyaWNWYWx1ZT4ge1xuICBwcml2YXRlIHJlYWRvbmx5IGRhdGE6IE1ldHJpYzxUPltdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZGF0YSA9IFtdO1xuICB9XG5cbiAgZ2V0KGxhYmVscz86IExhYmVscyk6IE1ldHJpYzxUPiB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIGZpbmRFeGlzdGluZ01ldHJpYzxUPihsYWJlbHMsIHRoaXMuZGF0YSk7XG4gIH1cblxuICBzZXQodmFsdWU6IFQsIGxhYmVscz86IExhYmVscyk6IHRoaXMge1xuICAgIGNvbnN0IGV4aXN0aW5nID0gZmluZEV4aXN0aW5nTWV0cmljKGxhYmVscywgdGhpcy5kYXRhKTtcbiAgICBpZiAoZXhpc3RpbmcpIHtcbiAgICAgIGV4aXN0aW5nLnZhbHVlID0gdmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGF0YS5wdXNoKHtcbiAgICAgICAgbGFiZWxzLFxuICAgICAgICB2YWx1ZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgY29sbGVjdChsYWJlbHM/OiBMYWJlbHMpOiBNZXRyaWM8VD5bXSB7XG4gICAgaWYgKCFsYWJlbHMpIHtcbiAgICAgIHJldHVybiB0aGlzLmRhdGE7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmRhdGEuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICBpZiAoIWl0ZW0ubGFiZWxzKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGVudHJpZXMgPSBPYmplY3QuZW50cmllcyhsYWJlbHMpO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IFtsYWJlbCwgdmFsdWVdID0gZW50cmllc1tpXTtcbiAgICAgICAgaWYgKGl0ZW0ubGFiZWxzW2xhYmVsXSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pO1xuICB9XG5cbiAgcmVzZXRBbGwoKTogdGhpcyB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmRhdGEubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRoaXMucmVzZXQodGhpcy5kYXRhW2ldLmxhYmVscyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBhYnN0cmFjdCByZXNldChsYWJlbHM/OiBMYWJlbHMpOiB2b2lkO1xufVxuIl19